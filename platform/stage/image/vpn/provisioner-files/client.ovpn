client
{{PROTOCOL_CONF_STR}}
remote {{PUBLIC_IP}} {{PORT}}
dev tun

resolv-retry infinite
nobind
persist-key
persist-tun

remote-cert-tls server
verify-x509-name {{SERVER_NAME}} name

auth {{ENCRYPTION_HMAC_ALG}}
auth-nocache

cipher {{ENCRYPTION_CIPHER}}
tls-client
tls-version-min 1.2
tls-cipher {{ENCRYPTION_CC_CIPHER}}

ignore-unknown-option block-outside-dns
setenv opt block-outside-dns # Prevent Windows 10 DNS leak

auth-user-pass

verb 4

<ca>
{{EASY_RSA_CA_CERT}}
</ca>

<cert>
{{EASY_RSA_CLIENT_CERT}}
</cert>

<key>
{{EASY_RSA_CLIENT_PRIV}}
</key>

{{TLS_AUTH_KEY_DIRECTION}}
<{{TLS_SIG}}>
{{TLS_CRYPT_KEY}}
$(cat "/etc/openvpn/${ENCRYPTION_TLS_SIG}.key")
</{{TLS_SIG}}>


# client
# $PROTOCOL_CONF_STR
# remote $PUBLIC_IP $PORT
# dev tun

# resolv-retry infinite
# nobind
# persist-key
# persist-tun

# remote-cert-tls server
# verify-x509-name $SERVER_NAME name

# auth $ENCRYPTION_HMAC_ALG
# auth-nocache

# cipher $ENCRYPTION_CIPHER
# tls-client
# tls-version-min 1.2
# tls-cipher $ENCRYPTION_CC_CIPHER

# ignore-unknown-option block-outside-dns
# setenv opt block-outside-dns # Prevent Windows 10 DNS leak

# auth-user-pass

# verb 4

# <ca>
# $(cat "/etc/openvpn/easy-rsa/pki/ca.crt")
# </ca>

# <cert>
# $(awk '/BEGIN/,/END/' "/etc/openvpn/easy-rsa/pki/issued/${CLIENT_NAME}.crt")
# </cert>

# <key>
# $(cat "/etc/openvpn/easy-rsa/pki/private/${CLIENT_NAME}.key")
# </key>

# $(if [[ $TLS_SIG == "tls-auth" ]]; then echo "key-direction 1"; fi)
# <${ENCRYPTION_TLS_SIG}>
# $(cat "/etc/openvpn/${ENCRYPTION_TLS_SIG}.key")
# </${ENCRYPTION_TLS_SIG}>
