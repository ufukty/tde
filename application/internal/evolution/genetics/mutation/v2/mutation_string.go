// Code generated by "stringer -type Mutation"; DO NOT EDIT.

package mutation

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MLiteralShuffle-0]
	_ = x[MTokenShuffle-1]
	_ = x[MBlockStmtNewLine-2]
	_ = x[MBlockStmtCreateVariableDeclaration-3]
	_ = x[MBlockStmtSwapTwoLines-4]
	_ = x[MBlockStmtConditionalize-5]
	_ = x[MBlockStmtLoopify-6]
	_ = x[MIfStmtRegenerateCond-7]
	_ = x[MIfStmtRegenerateBody-8]
	_ = x[MIfStmtRegenerateElse-9]
	_ = x[MIfStmtAddElif-10]
	_ = x[MIfStmtRemoveElif-11]
	_ = x[MIfStmtRegenerateElifCondition-12]
	_ = x[MIfStmtRegenerateElifBody-13]
	_ = x[MForStmtRegenerateCond-14]
	_ = x[MFor-15]
	_ = x[MBlockStmtForRange-16]
	_ = x[MDefine-17]
	_ = x[MExprRegenerate-18]
	_ = x[MExprCallPackageFunction-19]
	_ = x[MExprRangeOverArrayWithLoopCounter-20]
}

const _Mutation_name = "MLiteralShuffleMTokenShuffleMBlockStmtNewLineMBlockStmtCreateVariableDeclarationMBlockStmtSwapTwoLinesMBlockStmtConditionalizeMBlockStmtLoopifyMIfStmtRegenerateCondMIfStmtRegenerateBodyMIfStmtRegenerateElseMIfStmtAddElifMIfStmtRemoveElifMIfStmtRegenerateElifConditionMIfStmtRegenerateElifBodyMForStmtRegenerateCondMForMBlockStmtForRangeMDefineMExprRegenerateMExprCallPackageFunctionMExprRangeOverArrayWithLoopCounter"

var _Mutation_index = [...]uint16{0, 15, 28, 45, 80, 102, 126, 143, 164, 185, 206, 220, 237, 267, 292, 314, 318, 336, 343, 358, 382, 416}

func (i Mutation) String() string {
	if i < 0 || i >= Mutation(len(_Mutation_index)-1) {
		return "Mutation(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Mutation_name[_Mutation_index[i]:_Mutation_index[i+1]]
}
